/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import DAO.bookingDAO;
import DAO.customerDAO;
import DAO.foodDAO;
import DAO.roomDAO;
import Model.DetailFoodOrder;
import Model.FoodOrder;
import Model.booking;
import Model.checkOUT;
import Model.customer;
import Model.detailBooking;
import Model.food;
import Model.room;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Font.FontFamily;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.concurrent.TimeUnit;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author T450s
 */
public class checkout extends javax.swing.JFrame {

    /**
     * Creates new form checkout
     */
    public checkout() {
        initComponents();
        jTextField4.setEditable(false);
        jTextField2.setEditable(false);
        jTextField11.setEditable(false);
        jTextField3.setEditable(false);
        jTextField4.setEditable(false);
        jTextField5.setEditable(false);
        jTextField6.setEditable(false);
        jTextField7.setEditable(false);
        jTextField8.setEditable(false);
        jTextField10.setEditable(false);
        autoDate();
        autoTime();
        
    }
    
    private void autoDate() {
        java.util.Date d = new java.util.Date();
        SimpleDateFormat s = new SimpleDateFormat("yyyy-MM-dd");
        jTextField4.setText(s.format(d));
    }

    private void autoTime() {
        new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                java.util.Date d = new java.util.Date();
                SimpleDateFormat s = new SimpleDateFormat("hh:mm:ss a");
                jTextField2.setText(s.format(d));
            }
        }).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField10 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1280, 720));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Price Per Day:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 190, -1, -1));

        jTextField7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 190, 130, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("People Per Room:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 190, -1, -1));

        jTextField8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 190, 130, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Services Fees:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 260, -1, -1));

        jTextField9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(jTextField9, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 260, 130, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Total Cost:");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 260, -1, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1228, 19, 36, 36));

        jTextField10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(jTextField10, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 260, 130, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/checkout.png"))); // NOI18N
        jLabel1.setText("CHECK OUT");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 19, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Nationality", "Gender", "Mobile Number", "Email", "ID Proof", "Address"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 1260, 130));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Room Number:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(454, 50, -1, -1));

        jTextField1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(573, 47, 129, -1));

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton3.setText("CHECK OUT");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 190, -1, -1));

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(751, 47, -1, -1));

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton4.setText("CLEAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 260, 107, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Check Out Time:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 120, -1, -1));

        jTextField2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 120, 128, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Check In Date:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 120, -1, -1));

        jTextField3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 120, 128, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Check Out Date:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        jTextField4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, 128, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Booking Date:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 120, -1, -1));

        jTextField5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 120, 128, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Room Type:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        jTextField6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, 130, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Number Of Days Stay:");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));

        jTextField11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(jTextField11, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 260, 130, -1));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Date", "Order Time", "Food Name", "Price", "Qty", "Amount"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, 1260, 170));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel13.setText("Food Order's Detail:");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 500, -1, -1));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel15.setText("Customer's Detail");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 320, -1, -1));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/BG1.jpg"))); // NOI18N
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(-40, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new home().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new checkout().setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String roomNo = jTextField1.getText();
        String checkoutDate = jTextField4.getText();
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        model.setRowCount(0);
        DefaultTableModel model1 = (DefaultTableModel)jTable2.getModel();
        model1.setRowCount(0);

        bookingDAO bd = new bookingDAO();
        booking b = new booking();
        roomDAO rd = new roomDAO();
        room rm = new room();
        foodDAO fd = new foodDAO();
        customerDAO cd = new customerDAO();
        ArrayList<customer> listCustomer = new ArrayList<>();
        rm = rd.searchRoom(roomNo);
        b = bd.searchBookingForCheckout(roomNo, Date.valueOf(checkoutDate));
        int idBooking = b.getIdBooking();
        listCustomer = cd.searchCustomer(idBooking);
        String checkinDate = b.getDetailbooking().getCheckinDate().toString();
        long getDiff = Date.valueOf(checkoutDate).getTime() - Date.valueOf(checkinDate).getTime();
        long numberOfDaysStay = TimeUnit.MILLISECONDS.toDays(getDiff);
        if(numberOfDaysStay == 0)
        {
            numberOfDaysStay = 1;
        }
        int idCus = cd.searchCustomer(roomNo, Date.valueOf(checkinDate), Date.valueOf(checkoutDate)).getIdCus();
        int servicesFees = fd.servicesFees(idCus).getTotalPrice();
        int priceperDay = rm.getPricePerDay();
        
        ArrayList<FoodOrder> listFoodOrder = new ArrayList<>();
        ArrayList<DetailFoodOrder> listDetailFoodOrder = new ArrayList<>();
        listFoodOrder = fd.searchFoodOrder(idCus);
        
        if(roomNo.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Room Number Field Is Required");
        }
        else
        {
            jTextField10.setText(String.valueOf(servicesFees + numberOfDaysStay * priceperDay));
            jTextField9.setText(String.valueOf(servicesFees));
            jTextField3.setText(b.getDetailbooking().getCheckinDate().toString());
            jTextField5.setText(b.getBookingDate().toString());
            jTextField8.setText(String.valueOf(rm.getPeoplePerRoom()));
            jTextField6.setText(rm.getRoomType());
            jTextField7.setText(String.valueOf(priceperDay));
            jTextField11.setText(String.valueOf(numberOfDaysStay));
            
            for(int i = 0; i < listCustomer.size(); i++)
            {
                model.addRow(new Object[]{listCustomer.get(i).getIdCus(), listCustomer.get(i).getName(), listCustomer.get(i).getNationality(), listCustomer.get(i).getGender(), listCustomer.get(i).getMobilePhone(), listCustomer.get(i).getEmail(), listCustomer.get(i).getIdProof(), listCustomer.get(i).getAddress()});
            }
            
            for(int i = 0; i < listFoodOrder.size(); i++)
            {
                int idOrder = Integer.valueOf(listFoodOrder.get(i).getIdOrder());
                listDetailFoodOrder = fd.searchDetailFoodOrder(idCus,idOrder);
                for(int j = 0; j < listDetailFoodOrder.size(); j++)
                {
                    model1.addRow(new Object[]{listFoodOrder.get(i).getOrderDate(), listFoodOrder.get(i).getOrderTime(), fd.searchFood(listDetailFoodOrder.get(j).getIdFood()).getFoodName(), listDetailFoodOrder.get(j).getPrice(), listDetailFoodOrder.get(j).getQty(), listDetailFoodOrder.get(j).getAmount()});
               }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        TableModel model = jTable1.getModel();
        bookingDAO bd = new bookingDAO();
        String roomNo = jTextField1.getText();
        String checkoutDate = jTextField4.getText();
        int peoplePerRoom = Integer.parseInt(jTextField8.getText());
        int idBooking = bd.searchBookingForCheckout(roomNo, Date.valueOf(checkoutDate)).getIdBooking();
        
        checkOUT cout = new checkOUT();
        detailBooking db = new detailBooking();
        customerDAO cd = new customerDAO();
        //ArrayList<customer> listCustomer = new ArrayList<>();
        //listCustomer = cd.searchCustomer(idBooking);
        customer cus = new customer();
        
        foodDAO fd = new foodDAO();
        int idCus = cd.searchCustomer(roomNo, Date.valueOf(jTextField3.getText()), Date.valueOf(checkoutDate)).getIdCus();
        ArrayList<FoodOrder> listFoodOrder = new ArrayList<>();
        ArrayList<DetailFoodOrder> listDetailFoodOrder = new ArrayList<>();
        listFoodOrder = fd.searchFoodOrder(idCus);
        //listDetailFoodOrder = fd.searchDetailFoodOrder(idCus);
        
        
        
        db.setIdBooking(idBooking);
        if(bd.updateForCheckout(db))
        {
            cout.setCheckoutDate(LocalDate.parse(checkoutDate));
            cout.setCheckoutTime(jTextField2.getText());
            cout.setIdBooking(idBooking);
            cout.setServicesPrice(Integer.parseInt(jTextField9.getText()));
            cout.setTotalPrice(Integer.parseInt(jTextField10.getText()));
            if(cd.addCheckout(cout))
            {
                int idCheckout = cd.searchCheckout(idBooking).getIdCheckout();
                
                
                String path = "D:\\";
                Document doc = new Document();
                try
                {
                    PdfWriter.getInstance(doc, new FileOutputStream(path+""+idCheckout+".pdf"));
                    doc.open();
                    Font f = new Font(FontFamily.TIMES_ROMAN,10,Font.NORMAL,BaseColor.BLACK);
                    Font f1 = new Font(FontFamily.TIMES_ROMAN,14,Font.BOLD,BaseColor.BLACK);
                    Font f2 = new Font(FontFamily.TIMES_ROMAN,18,Font.BOLD,BaseColor.BLACK);
                    Paragraph paragraph = new Paragraph("-Hotel Receipt-", new Font(FontFamily.TIMES_ROMAN,32,Font.BOLD,BaseColor.BLACK));
                    paragraph.setAlignment(Element.ALIGN_CENTER);
                    doc.add(paragraph);
                    //doc.add(new Paragraph("    					               -Hotel Receipt-                                           \n"));
                    Paragraph paragraph1 = new Paragraph("****************************************************************************************************************\n");
                    doc.add(paragraph1);
                    doc.add(new Paragraph("ID Checkout: "+idCheckout+"              Room Number: "+roomNo+"\nRoom Type: "+jTextField6.getText()+"           People Per Room: "+peoplePerRoom+"              Price Per Day: "+jTextField7.getText()+"\n", f));
                    doc.add(new Paragraph("Booking Date: "+jTextField5.getText()+"          Booking Time: "+bd.searchBookingById(idBooking).getBookingTime()+"\nCheckin Date: "+jTextField3.getText()+"             Checkin Time: "+cd.searchCheckinTime(idBooking).getCheckinTime()+"\nCheckout Date: "+checkoutDate+"             Checkout Time: "+jTextField2.getText()+"\n", f));
                    doc.add(paragraph1);
                    doc.add(new Paragraph("     Custumer's Detail:\n\n", f2));
                    
                    PdfPTable table = new PdfPTable(7);
                    Paragraph tc1 = new Paragraph("Name", f1);
                    Paragraph tc2 = new Paragraph("Nationality", f1);
                    Paragraph tc3 = new Paragraph("Gender", f1);
                    Paragraph tc4 = new Paragraph("Mobile Number", f1);
                    Paragraph tc5 = new Paragraph("Email", f1);
                    Paragraph tc6 = new Paragraph("ID Proof", f1);
                    Paragraph tc7 = new Paragraph("Address", f1);
                    tc1.setAlignment(Element.ALIGN_CENTER);
                    tc2.setAlignment(Element.ALIGN_CENTER);
                    tc3.setAlignment(Element.ALIGN_CENTER);
                    tc4.setAlignment(Element.ALIGN_CENTER);
                    tc5.setAlignment(Element.ALIGN_CENTER);
                    tc6.setAlignment(Element.ALIGN_CENTER);
                    tc7.setAlignment(Element.ALIGN_CENTER);
                    PdfPCell header1 = new PdfPCell(tc1);
                    PdfPCell header2 = new PdfPCell(tc2);
                    PdfPCell header3 = new PdfPCell(tc3);
                    PdfPCell header4 = new PdfPCell(tc4);
                    PdfPCell header5 = new PdfPCell(tc5);
                    PdfPCell header6 = new PdfPCell(tc6);
                    PdfPCell header7 = new PdfPCell(tc7);
//                    header1.setBackgroundColor(BaseColor.DARK_GRAY);
//                    header2.setBackgroundColor(BaseColor.DARK_GRAY);
//                    header3.setBackgroundColor(BaseColor.DARK_GRAY);
//                    header4.setBackgroundColor(BaseColor.DARK_GRAY);
//                    header5.setBackgroundColor(BaseColor.DARK_GRAY);
//                    header6.setBackgroundColor(BaseColor.DARK_GRAY);
//                    header7.setBackgroundColor(BaseColor.DARK_GRAY);
                    table.addCell(header1);
                    table.addCell(header2);
                    table.addCell(header3);
                    table.addCell(header4);
                    table.addCell(header5);
                    table.addCell(header6);
                    table.addCell(header7);
                    for(int i = 0; i < peoplePerRoom; i++)
                    {
                        table.addCell(new PdfPCell(new Paragraph(model.getValueAt(i, 1).toString(), f)));
                        table.addCell(new PdfPCell(new Paragraph(model.getValueAt(i, 2).toString(), f)));
                        table.addCell(new PdfPCell(new Paragraph(model.getValueAt(i, 3).toString(), f)));
                        table.addCell(new PdfPCell(new Paragraph(model.getValueAt(i, 4).toString(), f)));
                        table.addCell(new PdfPCell(new Paragraph(model.getValueAt(i, 5).toString(), f)));
                        table.addCell(new PdfPCell(new Paragraph(model.getValueAt(i, 6).toString(), f)));
                        table.addCell(new PdfPCell(new Paragraph(model.getValueAt(i, 7).toString(), f)));
                    }
                    doc.add(table);
                    doc.add(new Paragraph("     Food Order's Detail:\n\n", f2));
                    
                    PdfPTable table1 = new PdfPTable(6);
                    Paragraph t1c1 = new Paragraph("Order Date", f1);
                    Paragraph t1c2 = new Paragraph("Order Time", f1);
                    Paragraph t1c3 = new Paragraph("Food Name", f1);
                    Paragraph t1c4 = new Paragraph("Price", f1);
                    Paragraph t1c5 = new Paragraph("Qty", f1);
                    Paragraph t1c6 = new Paragraph("Amount", f1);
                    t1c1.setAlignment(Element.ALIGN_CENTER);
                    t1c2.setAlignment(Element.ALIGN_CENTER);
                    t1c3.setAlignment(Element.ALIGN_CENTER);
                    t1c4.setAlignment(Element.ALIGN_CENTER);
                    t1c5.setAlignment(Element.ALIGN_CENTER);
                    t1c6.setAlignment(Element.ALIGN_CENTER);
                    PdfPCell h1 = new PdfPCell(t1c1);
                    PdfPCell h2 = new PdfPCell(t1c2);
                    PdfPCell h3 = new PdfPCell(t1c3);
                    PdfPCell h4 = new PdfPCell(t1c4);
                    PdfPCell h5 = new PdfPCell(t1c5);
                    PdfPCell h6 = new PdfPCell(t1c6);
//                    h1.setBackgroundColor(BaseColor.DARK_GRAY);
//                    h2.setBackgroundColor(BaseColor.DARK_GRAY);
//                    h3.setBackgroundColor(BaseColor.DARK_GRAY);
//                    h4.setBackgroundColor(BaseColor.DARK_GRAY);
//                    h5.setBackgroundColor(BaseColor.DARK_GRAY);
//                    h6.setBackgroundColor(BaseColor.DARK_GRAY);
                    table1.addCell(h1);
                    table1.addCell(h2);
                    table1.addCell(h3);
                    table1.addCell(h4);
                    table1.addCell(h5);
                    table1.addCell(h6);
                    for(int i = 0; i < listFoodOrder.size(); i++)
                    {
                        int idOrder = Integer.valueOf(listFoodOrder.get(i).getIdOrder());
                        listDetailFoodOrder = fd.searchDetailFoodOrder(idCus,idOrder);
                        for(int j = 0; j < listDetailFoodOrder.size(); j++)
                        {
                            table1.addCell(new PdfPCell(new Paragraph(listFoodOrder.get(i).getOrderDate().toString(), f)));
                            table1.addCell(new PdfPCell(new Paragraph(listFoodOrder.get(i).getOrderTime().toString(), f)));
                            table1.addCell(new PdfPCell(new Paragraph(fd.searchFood(listDetailFoodOrder.get(j).getIdFood()).getFoodName().toString(), f)));
                            table1.addCell(new PdfPCell(new Paragraph(String.valueOf(listDetailFoodOrder.get(j).getPrice()), f)));
                            table1.addCell(new PdfPCell(new Paragraph(String.valueOf(listDetailFoodOrder.get(j).getQty()), f)));
                            table1.addCell(new PdfPCell(new Paragraph(String.valueOf(listDetailFoodOrder.get(j).getAmount()), f)));
                        }
                    }
                    doc.add(table1);
                    Paragraph t1 = new Paragraph("\n                                                                                           Services Fees      : "+fd.servicesFees(idCus).getTotalPrice(), f1);
                    Paragraph t2 = new Paragraph("                                                                                    Number Of Days Stay: "+jTextField11.getText(), f1);
                    Paragraph t3 = new Paragraph("                                                                                            Total Cost        : "+jTextField10.getText(), f1);
                    t1.setIndentationRight(68);
                    t1.setAlignment(Element.ALIGN_RIGHT);
                    t2.setIndentationRight(68);
                    t2.setAlignment(Element.ALIGN_RIGHT);
                    t3.setIndentationRight(68);
                    t3.setAlignment(Element.ALIGN_RIGHT);
                    doc.add(t1);
                    doc.add(t2);
                    doc.add(t3);
                    
                    
                }
                catch(Exception e)
                {
                    e.printStackTrace();
                }
                doc.close();
                
                
                for(int i = 0; i < peoplePerRoom; i++)
                {
                    cus.setIdCheckout(idCheckout);
                    cus.setIdCus(Integer.parseInt(model.getValueAt(i, 0).toString()));
                    if(cd.updateCheckout(cus))
                    {
                        if(i == 0)
                        {
                            JOptionPane.showMessageDialog(this, "Checkout Successfully!");
                        }
                    }
                    if(i == peoplePerRoom - 1)
                    {
                        try
                        {
                            setVisible(false);
                            new checkout().setVisible(true);
                            if((new File("D:\\"+idCheckout+".pdf")).exists())
                            {
                                Process p = Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler D:\\"+idCheckout+".pdf");
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(null, "File Is Not Existed");
                            }
                            
                        }
                        catch(Exception e)
                        {
                            e.printStackTrace();
                        }
                        
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new checkout().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
